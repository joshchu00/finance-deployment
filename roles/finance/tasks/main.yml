---
- name: create deployment directory
  file:
    path: '{{ deployment_root }}'
    state: directory
    mode: 0755

- name: copy docker-compose.yml
  copy:
    src: docker-compose.yml
    dest: '{{ deployment_root }}/docker-compose.yml'
    owner: root
    group: root
    mode: 0644

- name: generate .env
  blockinfile:
    path: '{{ deployment_root }}/.env'
    create: yes
    owner: root
    group: root
    mode: 0644
    block: |
      ENVIRONMENT_NAME={{ environment_name }}
      FINANCE_GO_CRAWLER_IMAGE={{ finance_go_crawler_image }}
      FINANCE_GO_PROCESSOR_IMAGE={{ finance_go_processor_image }}
      FINANCE_GO_ANALYZER_IMAGE={{ finance_go_analyzer_image }}
      FINANCE_GO_PORTER_IMAGE={{ finance_go_porter_image }}
      FINANCE_GO_SHIELDER_IMAGE={{ finance_go_shielder_image }}
      FINANCE_REACT_HUNTER_IMAGE={{ finance_react_hunter_image }}
      DIRECTORY_BASE_PREFIX={{ directory_base_prefix }}
      DIRECTORY_LOG={{ directory_log }}
      DIRECTORY_DATA={{ directory_data }}
      CASSANDRA_HOSTS={{ cassandra_hosts }}
      CASSANDRA_KEYSPACE_PREFIX={{ cassandra_keyspace_prefix }}
      KAFKA_BOOTSTRAP_SERVERS={{ kafka_bootstrap_servers }}
      CRAWLER_MODE={{ crawler_mode }}
      TWSE_DATA={{ twse_data }}
      TWSE_CRON={{ twse_cron }}
      PORTER_V1_HOST={{ porter_v1_host }}
      PORTER_V1_PORT={{ porter_v1_port }}
      SHIELDER_HOST={{ shielder_host }}
      SHIELDER_PORT={{ shielder_port }}
      SHIELDER_CORS_METHODS={{ shielder_cors_methods }}
      SHIELDER_CORS_ORIGINS={{ shielder_cors_origins }}
      HUNTER_PORT={{ hunter_port }}
      SHIELDER_PROXY_SCHEME={{ shielder_proxy_scheme }}
      SHIELDER_PROXY_HOST={{ shielder_proxy_host }}
      SHIELDER_PROXY_PORT={{ shielder_proxy_port }}

- name: create finance directories
  file:
    path: '{{ item }}'
    state: directory
    mode: 0777
  with_items:
    - '{{ directory_base }}'
    - '{{ directory_base }}{{ directory_log }}'
    - '{{ directory_base }}{{ directory_data }}'
    - '{{ directory_base }}{{ directory_data }}{{ twse_data }}'

- name: pull docker images
  command: /usr/local/bin/docker-compose pull
  args:
    chdir: '{{ deployment_root }}'

- name: start docker
  command: /usr/local/bin/docker-compose up -d
  args:
    chdir: '{{ deployment_root }}'
